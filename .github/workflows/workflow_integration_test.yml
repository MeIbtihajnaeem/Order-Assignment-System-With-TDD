name: JAVA IT with Maven in Linux
on:
 push:
 pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      workdir: ./
    strategy:
      matrix:
        include:
        - java: 8
          additional-maven-args: "-Pintegration-test -Dpostgres.user=$DATABASE_USER -Dpostgres.password=$DATABASE_PASSWORD -Dpostgres.dbName=$DATABASE_NAME"
    name: Build with Java ${{ matrix.java }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Maven Packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-jdk-${{ matrix.java }}-${{ hashFiles('**/pom.xml','**/*.yml') }}
        restore-keys: ${{ runner.os }}-m2-
    - name: Build with Maven
      run: >
        mvn verify ${{matrix.additional-maven-args}}
      working-directory: ${{ env.workdir }}
      env:
        DATABASE_USER: ${{secrets.DATABASE_USER}}
        DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
        DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      if: ${{ always () }}
    - name: ArchiveFailSafeReport
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
          name: failsafe-report-jdk-${{ matrix.java }}
          path: '**/target/failsafe-reports'