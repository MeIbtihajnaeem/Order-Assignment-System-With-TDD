name: JAVA IT with Maven in Linux

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      workdir: ./
    strategy:
      matrix:
        include:
          - java: 8
            additional-maven-args: "-Pintegration-test -Dpostgres.user=$DATABASE_USER -Dpostgres.password=$DATABASE_PASSWORD -Dpostgres.dbName=$DATABASE_NAME"
    name: Build with Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Maven Packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-jdk-${{ matrix.java }}-${{ hashFiles('**/pom.xml','**/*.yml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Generate persistence.xml
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '<persistence xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd" version="2.0">' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '  <persistence-unit name="myPersistenceUnit" transaction-type="RESOURCE_LOCAL">' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '    <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '    <class>com.example.orderAssignmentSystem.model.CustomerOrder</class>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '    <class>com.example.orderAssignmentSystem.model.Worker</class>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '    <properties>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo "      <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:postgresql://localhost:5432/$DATABASE_NAME\" />" >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo "      <property name=\"javax.persistence.jdbc.user\" value=\"$DATABASE_USER\" />" >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo "      <property name=\"javax.persistence.jdbc.password\" value=\"$DATABASE_PASSWORD\" />" >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '      <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '      <property name="hibernate.hbm2ddl.auto" value="create-drop" />' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '    </properties>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '  </persistence-unit>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
          echo '</persistence>' >> ./com.example.orderAssignmentSystem/src/test/resources/META-INF/persistence.xml
        env:
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      - name: Build with Maven
        run: mvn verify ${{ matrix.additional-maven-args }}
        working-directory: ${{ env.workdir }}
      - name: ArchiveFailSafeReport
        uses: actions/upload-artifact@v2
        with:
          name: failsafe-report-jdk-${{ matrix.java }}
          path: '**/target/failsafe-reports'
